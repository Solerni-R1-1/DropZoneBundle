<div class="row">
<div class="col-md-12">
    {% if drop.countFinishedCorrections >= dropzone.expectedTotalCorrection %}
        {% set totalBadgesToGo = nbTotalBadges - (nbAcquiredBadges + nbFailedBadges) %}
        {% if totalBadgesToGo > 1 %}
            {% set plural = 's' %}
        {% else %}
            {% set plural = '' %}
        {% endif %}
        {% if drop.calculatedGrade >= dropzone.minimumScoreToPass %}
            {#Â Eval succeeded #}
	        <h2>{{ 'evalDone'|trans({}, 'solerni') }}<span class='FAQ'><a href='{{ path( 'solerni_static_page', { 'name': 'cms_faq' } ) }}' class='FAQ'>{{'faq'|trans({}, 'platform')}}</a></span></h2>
	        <hr class="slrn-hr slrn-hr--lightgrey">
            <span class="slrn-bigger">
                {{ 'default_success_message'|trans({'evalGrade': drop.getCalculatedGrade|round(1, 'common')|replace({'.': ','}) }, 'solerni')|raw }}                   
	        </span>
            {% for badge in badges %}
                {% set status = badge.status %}
                {% if 2 == status %}
                    {% set badgeEntity 	= badge.badge %}
                    {% set buttonLink 	= path( 'claro_profile_view_badges' ) %}
                    <span class="slrn-bigger">{{ 'win_badge'|trans({ '%moocName%': workspace.getMooc().getTitle() }, 'solerni')|raw }}</span>
                    <div class="slrn-my_badges-list__item">
                        <img src="{{ image(badgeEntity.webPath).cropResize( 112, 112 ) }}" 
                             alt="{{ badgeEntity.name }}" 
                             class="slrn-my_badges-list__item__image"
                             width="112"
                             height="112"
                        />
                        <section class="slrn-my_badges-list__body">
                            <h6 class="slrn-my_badges-list__item__title">{{'badge'|trans({}, 'platform')}} &laquo; {{ badgeEntity.name }} &raquo;</h6>
                            <p class=" slrn-my_badges-list__body__status"><span class="slrn-bold">{{'granted_on'|trans({}, 'solerni')}} :</span> {{ badge.issuedDate|localizeddate( "short", "none", app.request.locale, null, 'd/MM/Y') }}</p>
                            <article class="slrn-my_badges-list__content">{{ badgeEntity.criteria | raw }}</article>
                            <footer class="slrn-my_badges-list__footer">
                                {#<div class="">
                                    <span class="slrn-gratuit-icon">{{'free_price'|trans({}, 'solerni')}}</span>
                                </div>#}
                                <div class="slrn-button-page">
                                    <a class="btn btn-primary pull-right" href="{{ buttonLink }}">
                                        {{'see_my_badges'|trans({}, 'solerni')}}
                                    </a>
                                    <a class="btn btn-gris pull-left slrn-dropzone-cancel" href="{{ path('icap_dropzone_drop_detail_by_user',{'resourceId': dropzone.id,'dropId':drop.id}) }}">
                                        {{'see_corrections'|trans({}, 'solerni')}}
                                    </a>
                                </div>
                           </footer>
                       </section>
                   </div>
                {% endif %}
            {% endfor %}
			<div class='slrn-post-eval-message'>
                {{ dropzone.successMessage|raw }}
                {% if totalBadgesToGo > 0 %}
                    {{ 'post_eval_badge_count_success' |trans({   '%totalBadgesToGo%' : totalBadgesToGo, 
                                                            '%plural%': plural, 
                                                             '%moocName%': workspace.getMooc().getTitle() }, 
                    'solerni')|raw }}
                    <a href="{{ path( 'claro_workspace_open_tool', { 'workspaceId': workspace.getId(), 'toolName': 'my_badges' } ) }}" class="pink_link">{{ 'get_new_badges'|trans({}, 'solerni') }}</a>
                {% endif %}
            </div>
        {% else %}
            {# Eval is failed #}
	        <h2>{{ 'evalDone'|trans({}, 'solerni') }}<span class='FAQ'><a href='{{ path( 'solerni_static_page', { 'name': 'cms_faq' } ) }}' class='FAQ'>{{'faq'|trans({}, 'platform')}}</a></span></h2>
	        <hr class="slrn-hr slrn-hr--lightgrey">
            <p class="slrn-bigger">
                {{ 'default_failed_message'|trans({'%evalGrade%': drop.getCalculatedGrade|round(1, 'common')|replace({'.': ','}) }, 'solerni')|raw }}
                <a class="pink_link" href="{{ path('icap_dropzone_drop_detail_by_user',{'resourceId': dropzone.id,'dropId':drop.id}) }}">
                    {{'see_corrections'|trans({}, 'solerni')}}
                </a>
	        </p>
            <div class="slrn-post-eval-message">
                {{ dropzone.failMessage|raw }}
                {% if totalBadgesToGo > 0 %}
                    {{ 'post_eval_badge_count_failed' |trans({   '%totalBadgesToGo%' : totalBadgesToGo, 
                                                            '%plural%': plural,
                                                             '%moocName%': workspace.getMooc().getTitle() }, 
                    'solerni')|raw }}
                    <a href="{{ path( 'claro_workspace_open_tool', { 'workspaceId': workspace.getId(), 'toolName': 'my_badges' } ) }}" class="pink_link">{{ 'get_new_badges'|trans({}, 'solerni') }}</a>
                {% endif %}
            </div>
	     {% endif %}
        <div class="slrn-correct-buttons">
            <a href="{{ mooc_service.getBackMoocUrl( workspace, app.user ) }}" class="btn btn-default btn-gris slrn-dropzone-cancel">{{ 'return_mooc'|trans({}, 'solerni') }}</a>
            
        </div>
    {% else %}
        <h2>{{ 'endNotOver'|trans({}, 'solerni') }}<span class='FAQ'><a href='{{ path( 'solerni_static_page', { 'name': 'cms_faq' } ) }}' class='FAQ'>FAQ</a></span></h2>
        <hr class="slrn-hr slrn-hr--lightgrey">
        {% if dropzone.endReview < date() %}
            <div class="slrn-grey-block slrn-info-block">
                {% set endEvalDate = dropzone.endReview|date("d/m/Y") %}
                <p>{{ 'review_is_over'|trans({ 'endEvalDate': endEvalDate }, 'solerni')|raw }}</p>
            </div>
        {% else %}
            <p>{{ 'wait_for_results'|trans({}, 'solerni')|raw }}
        {% endif %}
    {% endif %}
</div>
</div>